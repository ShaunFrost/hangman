{"version":3,"sources":["components/Header.js","components/Figure.js","components/Wrong.js","components/Word.js","functions/utility.js","components/Result.js","components/Notification.js","App.js","index.js"],"names":["Header","Figure","wrongCount","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","Wrong","class","map","letter","i","reduce","prev","curr","Word","selectedCharacter","correctLetters","split","includes","notifyAlreadyEntered","setNotify","setTimeout","isWinner","character","win","forEach","Result","setPlaying","playAgain","message","reveal","playing","useEffect","style","display","src","onClick","Notification","notify","characters","Math","floor","random","App","useState","setCorrectLetters","setWrongLetters","handleKeydown","event","key","keyCode","toLowerCase","currentLetters","window","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f333fe50.chunk.js","sourcesContent":["import React from 'react'\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <h1>Anime Character Hangman</h1>\r\n            <p>Guess the character! Enter a letter...</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nconst Figure = ({ wrongLetters}) => {\r\n    const wrongCount = wrongLetters.length;\r\n    return (\r\n            <svg height=\"250\" width=\"200\" className=\"figure-container\">\r\n                \r\n                <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n                <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\r\n                <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\r\n                <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\r\n\r\n            {wrongCount > 0 && <circle cx=\"140\" cy=\"70\" r=\"20\" />}\r\n            \r\n            {wrongCount > 1 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />}\r\n                \r\n            {wrongCount > 2 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />}\r\n            {wrongCount > 3 && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />}\r\n                \r\n            {wrongCount > 4 && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />}\r\n            {wrongCount > 5 && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />}\r\n            </svg>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default Figure","import React from 'react'\r\nconst Wrong = ({ wrongLetters}) => {\r\n    return (\r\n        <div class=\"wrong-letters-container\">\r\n            <div>\r\n                {wrongLetters.length > 0 &&\r\n                    <p>Letters guessed wrong</p>\r\n                }\r\n                {wrongLetters\r\n                    .map((letter, i) => <span key={i}>{letter}</span>)\r\n                    .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wrong","import React from 'react'\r\nconst Word = ({ selectedCharacter, correctLetters}) => {\r\n    return (\r\n        <div className=\"word\">\r\n            {selectedCharacter.split('').map((letter, i) => {\r\n                return (\r\n                    <span className=\"letter\" key={i}>\r\n                        {correctLetters.includes(letter) ? letter : ''}\r\n                    </span>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Word","export function notifyAlreadyEntered(setNotify) {\n    setNotify(true);\r\n    setTimeout(() => {\r\n        setNotify(false);\r\n    }, 1500);\r\n}\r\n\r\nexport function isWinner(character, correctLetters, wrongLetters) {\r\n    let win = 1;\r\n    character.split('').forEach(letter => {\r\n        if (!correctLetters.includes(letter)) {\r\n            win = 0;\r\n        }\r\n    });\r\n    if (wrongLetters.length === 6) {\r\n        win = -1;\r\n    }\r\n    return win;\r\n}","import React, { useEffect } from 'react';\r\nimport { isWinner } from '../functions/utility';\r\n\r\nconst Result = ({ selectedCharacter, correctLetters, wrongLetters, setPlaying, playAgain }) => {\r\n    let message = '';\r\n    let reveal = '';\r\n    let playing = true;\r\n\r\n    \r\n\r\n    if (isWinner(selectedCharacter, correctLetters, wrongLetters) === 1) {\r\n        message = 'Sugoi! Good job!';\r\n        reveal = `The character was indeed ${selectedCharacter}.`;\r\n        playing = false;\r\n    } else if (isWinner(selectedCharacter, correctLetters, wrongLetters) === -1){\r\n        message = 'Hangman! Gomen! You lost!';\r\n        reveal = `The character was ${selectedCharacter}.`;\r\n        playing = false;\r\n    }\r\n\r\n    useEffect(() => setPlaying(playing));\r\n\r\n    //const imageName = selectedCharacter + '.png';\r\n    //const filePath = `../../public/images/${imageName}`;\r\n    //const fileUrl = require(filePath);\r\n\r\n    return (\r\n        <div className=\"popup-container\" style={message !== '' ? { display: 'flex' } : {}}>\r\n            <div className=\"popup\">\r\n                <h2>{message}</h2>\r\n                <h3>{reveal}</h3>\r\n                <div className = \"anime-image\">\r\n                    <img src={`hangman/images/${selectedCharacter}.png`} />\r\n                </div>\r\n                <button onClick={playAgain}>Go Again</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result","import React from 'react'\r\nconst Notification = ({ notify }) => {\r\n    return (\r\n        <div className={`notification-container ${notify ? 'show' : ''}`}>\r\n            <p>You have already entered this letter</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import react, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Figure from './components/Figure';\nimport Wrong from './components/Wrong';\nimport Word from './components/Word';\nimport Result from './components/Result';\nimport Notification from './components/Notification';\nimport { notifyAlreadyEntered } from './functions/utility';\nimport './App.css';\n\nconst characters = ['natsu', 'naruto', 'fubuki', 'laxus', 'gohan', 'goku', 'vegeta', 'kakashi', 'minato'];\nlet selectedCharacter = characters[Math.floor(Math.random() * characters.length)];\n\n\n\nfunction App() {\n    const [playing, setPlaying] = useState(true);\n    const [correctLetters, setCorrectLetters] = useState([]);\n    const [wrongLetters, setWrongLetters] = useState([]);\n    const [notify, setNotify] = useState(false);\n\n    useEffect(() => {\n        const handleKeydown = event => {\n            const { key, keyCode } = event;\n            if (playing) {\n                if (keyCode >= 65 && keyCode <= 90) {\n                    const letter = key.toLowerCase();\n                    if (selectedCharacter.includes(letter)) {\n                        if (!correctLetters.includes(letter)) {\n                            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n                        } else {\n                            notifyAlreadyEntered(setNotify);\n                        }\n                    } else {\n                        if (!wrongLetters.includes(letter)) {\n                            setWrongLetters(currentLetters => [...currentLetters, letter]);\n                        } else {\n                            notifyAlreadyEntered(setNotify);\n                        }\n                    }\n                }\r\n            }\n            \n        }\n        window.addEventListener('keydown', handleKeydown);\n\n        return () => window.removeEventListener('keydown', handleKeydown);\n    }, [correctLetters, wrongLetters, playing]);\n\n    function playAgain() {\r\n        setPlaying(true);\r\n\r\n        // Empty Arrays\r\n        setCorrectLetters([]);\r\n        setWrongLetters([]);\r\n\r\n        const random = Math.floor(Math.random() * characters.length);\r\n        selectedCharacter = characters[random];\r\n    }\r\n\n\n  return (\n    <>\n          <Header />\n          <div className=\"game-container\">\n              <Figure wrongLetters={wrongLetters}/>\n              <Wrong wrongLetters={wrongLetters}/>\n              <Word selectedCharacter={selectedCharacter} correctLetters={correctLetters} />\n          </div>\n          <Result selectedCharacter={selectedCharacter} correctLetters={correctLetters} wrongLetters={wrongLetters} setPlaying={setPlaying} playAgain={playAgain} />\n          <Notification notify={notify} />\n\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}